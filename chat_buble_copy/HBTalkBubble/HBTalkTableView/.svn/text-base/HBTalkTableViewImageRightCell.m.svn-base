//
//  HBTalkTableViewImageRightCell.m
//  MyTest
//
//  Created by weqia on 13-8-11.
//  Copyright (c) 2013年 weqia. All rights reserved.
//

#import "HBTalkTableViewImageRightCell.h"
#import "HBHttpServer.h"

@implementation HBTalkTableViewImageRightCell

- (id)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier
{
    self = [super initWithStyle:style reuseIdentifier:reuseIdentifier];
    if (self) {
        // Initialization code
        UIImage* image=[UIImage imageNamed:@"SenderTextNodeBkg.png"];
        image=[image stretchableImageWithLeftCapWidth:30 topCapHeight:30];
        _backView.image=image;
    }
    return self;
}
#pragma -mark 私有方法
-(void)clear
{
    [_image removeFromSuperview];
    _image=nil;
    _smallImage=nil;
    _util=nil;
    [scroll removeFromSuperview];
    scroll =nil;
    [super clear];
    
}
-(void)addImage:(UIImage*)image1
{
    if(image1==nil)return;
    UIImage * image=[NSImageUtil limitSizeImage:self.talkData.contents withSize:CGSizeMake(IMAGE_MAX_WIDTH, IMAGE_MAX_HEIGHT)];
    CGSize size=image.size;
    float imgScale=0.0f;
    if(size.width>0)
        imgScale=size.height/size.width;
    float viewScale=IMAGE_MAX_HEIGHT/IMAGE_MAX_WIDTH;
    float width=size.width,height=size.height;
    if(imgScale<viewScale&&size.width>IMAGE_MAX_WIDTH){
        width=IMAGE_MAX_WIDTH;
        height=IMAGE_MAX_WIDTH*imgScale;
    }else if(imgScale>viewScale&&size.height>IMAGE_MAX_HEIGHT){
        height=IMAGE_MAX_HEIGHT;
        if(imgScale>0)
            width=height/imgScale;
    }
    _image=[[UIImageView alloc]initWithFrame:CGRectMake(0, 0, width, height)];
    _image.image=image;
    _image.layer.cornerRadius=5;
    _image.clipsToBounds=YES;
    [_content addSubview:_image];
    _smallImage=image;
    CGRect frame=_content.frame;
    frame.size=_image.frame.size;
    _content.frame=frame;
    
    UITapGestureRecognizer * tap=[[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(lookImageAction:)];
    tap.numberOfTapsRequired=1;
    [_backView addGestureRecognizer:tap];
    _backView.userInteractionEnabled=YES;
    [self layout];
}

-(void)downLoadImage:(NSString*)url
{
    _image=[[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 50, 50)];
    CGRect frame=_content.frame;
    frame.size=CGSizeMake(50, 50);
    _content.frame=frame;
    _image.layer.cornerRadius=5;
    _image.clipsToBounds=YES;
    [_content addSubview:_image];
    [self layout];
    UIImageView * __weak imaview=_image;
    NSMutableString * Url=nil;
    if([url length]>0){
        Url=[NSMutableString stringWithString:url];
        [Url appendFormat:@"&td=%d",THUMB_TALK_SMALL_1];
        void(^block)(UIImage * image)=^(UIImage * image){
            if(imaview==nil)
                return;
            UIImageView * __strong _imaview=imaview;
            UIImage * limitImage=[NSImageUtil limitSizeImage:image withSize:CGSizeMake(IMAGE_MAX_WIDTH, IMAGE_MAX_HEIGHT)];
            CGRect frame=_imaview.frame;
            frame.size=limitImage.size;
            _imaview.frame=frame;
            _imaview.image=limitImage;
            _smallImage=image;
            frame=_content.frame;
            frame.size.width=_imaview.frame.size.width;
            frame.size.height=_imaview.frame.size.height;
            _content.frame=frame;
            UITapGestureRecognizer * tap=[[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(lookImageAction:)];
            tap.numberOfTapsRequired=1;
            [_backView addGestureRecognizer:tap];
            _backView.userInteractionEnabled=YES;
            [self layout];
            [self setReched];
        };
        UIImage * image=[[HBHttpServer shareIntance] getMemoryCacheImage:Url withIndirectUrl:Url complete:^(UIImage *image) {
            block(image);
        }];
        if(image!=nil)
            block(image);
            

    }
}
-(void)upLoadImage
{
    self.talkData.dataStatu=HBTalkDataStatuIsUpLoading;
    CGRect rect=_backView.frame;
    indicator=[[HBActivityIndicatorView alloc]init];
    [_cellContent addSubview:indicator];
    indicator.tag=ACTIVITYINDICATOR_TAG;
    indicator.frame=CGRectMake(rect.origin.x-20, (rect.origin.y+(rect.origin.y+rect.size.height-30)/2), 15, 15);
    [_cellContent addSubview:indicator];
    [indicator startAnimating];
    [self.talkData upLoadData:NULL];
}
-(void)upLoadContent:(UIButton*)button
{
    [button removeFromSuperview];
    [self upLoadImage];
}

-(void)upLoadFailed
{
    if([self.talkData.contents isKindOfClass:[UIImage class]]){
        [self addImage:self.talkData.contents];
        CGRect rect=_backView.frame;
        UIButton * button=[UIButton buttonWithType:UIButtonTypeCustom];
        button.frame=CGRectMake(rect.origin.x-30,  (rect.origin.y+(rect.origin.y+rect.size.height-30)/2), 25, 25);
        [button setImage:[UIImage imageNamed:@"msg_state_fail_resend.png"] forState:UIControlStateNormal];
        [button setImage:[UIImage imageNamed:@"msg_state_fail_resend_pressed.png"] forState:UIControlStateHighlighted];
        [_cellContent addSubview:button];
        [button addTarget:self action:@selector(upLoadContent:) forControlEvents:UIControlEventTouchUpInside];
    }else{
        UILabel * label=[[UILabel alloc]initWithFrame:CGRectMake(0, 0,100, 15)];
        label.backgroundColor=[UIColor clearColor];
        label.textColor=[UIColor lightGrayColor];
        label.textAlignment=NSTextAlignmentCenter;
        label.text=@"发送图片失败";
        label.font=[UIFont systemFontOfSize:14];
        [_content addSubview:label];
        CGRect frame=_content.frame;
        frame.size=CGSizeMake(100, 15);
        _content.frame=frame;
        [self layout];
    }
}

-(void)setReched
{
    CGRect rect=_backView.frame;
    if(self.talkData.reachStatu==HBTalkDataReachStatuReach){
        UILabel * label=[[UILabel alloc]initWithFrame:CGRectMake(rect.origin.x-36,  (rect.origin.y+(rect.origin.y+rect.size.height-30)/2), 35, 15)];
        label.backgroundColor=[UIColor lightGrayColor];
        label.textColor=[UIColor grayColor];
        label.textAlignment=NSTextAlignmentCenter;
        label.layer.cornerRadius=4;
        label.text=@"已送达";
        label.font=[UIFont systemFontOfSize:11];
        label.textColor=[UIColor whiteColor];
        [_cellContent addSubview:label];
    }else if(self.talkData.reachStatu==HBTalkDataReachStatuReaded){
        UILabel * label=[[UILabel alloc]initWithFrame:CGRectMake(rect.origin.x-36,  (rect.origin.y+(rect.origin.y+rect.size.height-30)/2), 35, 15)];
        label.backgroundColor=[UIColor lightGrayColor];
        label.textColor=[UIColor grayColor];
        label.layer.cornerRadius=4;
        label.textAlignment=NSTextAlignmentCenter;
        label.textColor=[UIColor whiteColor];
        label.text=@"已读";
        label.font=[UIFont systemFontOfSize:11];
        [_cellContent addSubview:label];
    }
}

-(void)setContent
{
    [super setContent];
    if(self.talkData==nil)
        return;
    [super setContent];
    if(self.talkData.dataStatu==HBTalkDataStatuShouldDownLoad&&[self.talkData.contents isKindOfClass:[NSString class]] ){
        [self downLoadImage:self.talkData.contents];
    }else if(self.talkData.dataStatu==HBTalkDataStatuNormal&&[self.talkData.contents isKindOfClass:[UIImage class]]){
        [self addImage:self.talkData.contents];
        [self setReched];
    }else if(self.talkData.dataStatu==HBTalkDataStatuShouldUpLoad&&[self.talkData.contents isKindOfClass:[UIImage class] ]){
        [self addImage:self.talkData.contents];
        [self upLoadImage];
    }else if(self.talkData.dataStatu==HBTalkDataStatuIsUpLoading&&[self.talkData.contents isKindOfClass:[UIImage class]]){
        [self addImage:self.talkData.contents];
        indicator=[[HBActivityIndicatorView alloc]init];
        [_cellContent addSubview:indicator];
        CGRect rect=_backView.frame;
        indicator.frame=CGRectMake(rect.origin.x-20, (rect.origin.y+(rect.origin.y+rect.size.height-30)/2), 15, 15);
        indicator.tag=ACTIVITYINDICATOR_TAG;
        [indicator startAnimating];
    }else if(self.talkData.dataStatu==HBTalkDataStatuUpLoadFailed)
    {
        [self upLoadFailed];
    }
    [self layout];
}

#pragma -mark 事件响应方法
-(void)lookImageAction:(UIGestureRecognizer*)sender
{
    if(_image==nil)
        return;
    scroll=[[HBImageScroller alloc]initWithFrame:[UIScreen mainScreen].bounds];
    scroll.backgroundColor=[UIColor blackColor];
    if(self.talkData.dataStatu==HBTalkDataStatuShouldDownLoad){
        NSMutableString * Url=nil;
        if([self.talkData.contents length]>0){
            Url=[NSMutableString stringWithString:self.talkData.contents];
            [Url appendFormat:@"&td=%d",THUMB_TALK_BIG];
        }
        [scroll setImageWithURL:Url andSmallImage:_smallImage];
    }else if([self.talkData.contents isKindOfClass:[UIImage class]]){
        [scroll setImage:self.talkData.contents];
    }else{
        return;
    }
    [scroll addTarget:self tapOnceAction:@selector(unLookImageAction)];
    [UIApplication sharedApplication].statusBarHidden=YES;
    _util=[[NSImageUtil alloc]init];
    [_util showBigImage:nil fromView:_image complete:^(UIView *bacView) {
        [bacView setHidden:YES];
        [self.superview.window addSubview:scroll];
    }];
}

-(void)unLookImageAction
{
    [scroll removeFromSuperview];
    scroll=nil;
    [UIApplication sharedApplication].statusBarHidden=NO;
    [_util goBackToView:_image withImage:nil];
    _util =nil;
}



@end
